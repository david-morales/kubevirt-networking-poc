apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: mongodb-vm
  namespace: {{ .Values.namespace }}
spec:
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/domain: mongodb-vm
    spec:
      domain:
        devices:
          disks:
            - name: containerdisk
              disk:
                bus: virtio
            - name: cloudinitdisk
              disk:
                bus: virtio
            - name: mongodb-data
              disk:
                bus: virtio
            - name: tls-cert
              disk:
                bus: virtio
          interfaces:
            - name: default
              masquerade: {}
              model: virtio
        resources:
          requests:
            memory: 2Gi
            cpu: 1
      networks:
        - name: default
          pod: {}
      readinessProbe:
        exec:
          command:
          - mongosh
          - --eval
          - mongosh --eval 'db.runCommand("ping").ok' --quiet
        initialDelaySeconds: 5
        periodSeconds: 5
      volumes:
        - name: containerdisk
          containerDisk:
            image: "{{ .Values.vm.imageName }}:{{ .Values.vm.imageTag }}"
        - name: cloudinitdisk
          cloudInitNoCloud:
            userData: |
              #cloud-config
              users:
                - name: neo
                  plain_text_passwd: 'neo'
                  lock_passwd: false
                  groups: users, admin
                  sudo: ALL=(ALL) NOPASSWD:ALL
              hostname: mongodb-vm
              package_upgrade: true
              write_files:
                - path: /etc/yum.repos.d/mongodb-org-6.0.repo
                  content: |
                    [mongodb-org-6.0]
                    name=MongoDB Repository
                    baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/6.0/x86_64/
                    gpgcheck=1
                    enabled=1
                    gpgkey=https://www.mongodb.org/static/pgp/server-6.0.asc
                - path: /root/init-mongo.js
                  content: |
                    db = new Mongo().getDB("demo");
                    db.names.insertOne({name: "John Doe"});
                - path: /root/adjust_config_mongo.sh
                  content: |
                    cp /mnt/mongodb-tls-cert/tls.crt /etc/ssl/tls.crt
                    cp /mnt/mongodb-tls-cert/tls.key /etc/ssl/tls.key
                    cat /etc/ssl/tls.crt /etc/ssl/tls.key > /etc/ssl/mongodb.pem
                    sed -i 's/^\( *bindIp *: *\).*/\10.0.0.0/' /etc/mongod.conf
                    sed -i 's/^\( *sslMode *: *\).*/\1requireSSL/' /etc/mongod.conf
                    sed -i 's/^\( *sslPEMKeyFile *: *\).*/\1\/etc\/ssl\/mongodb.pem/' /etc/mongod.conf
                    sed -i 's/^\( *sslCAFile *: *\).*/\1\/etc\/ssl\/ca.crt/' /etc/mongod.conf
              runcmd:
                - dnf install -y epel-release
                - yum install -y mongodb-org
                - systemctl daemon-reload
                - systemctl enable --now mongod.service
                - sleep 10
                - chmod +x /root/adjust_config_mongo.sh
                - sh /root/adjust_config_mongo.sh
                - systemctl restart mongod.service
                - sleep 10
                - mongosh < /root/init-mongo.js
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
        - name: tls-cert
          secret:
            secretName: mongodb-cert-tls