apiVersion: v1
kind: Secret
metadata:
  name: mongodb-vm-userdata
  namespace: {{ .Values.namespace }}
type: Opaque
stringData:
  userdata: |
    #cloud-config
    users:
      - name: neo
        plain_text_passwd: 'neo'
        lock_passwd: false
        groups: users, admin
        sudo: ALL=(ALL) NOPASSWD:ALL
    hostname: mongodb-vm
    package_upgrade: true
    write_files:
      - content: |
          - hosts: localhost
            vars:
              ansible_python_interpreter: /usr/bin/python3
              config_port: 27017
              mongodb_repository: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/6.0/x86_64/
              bind_ip: 0.0.0.0
              authorization: disabled
              mongodb_use_tls: true
              mongodb_certificate_key_file: /etc/ssl/mongodb.pem
              mongodb_certificate_ca_file: /etc/ssl/ca.crt
              skip_restart: false
              replicaset_name: rsneo
              repl_set_name: '{{ ansible_replicaset_name }}'
              replicaset: true
              master_host: mongodb-2.poc-certificates.svc.cluster.local
            roles:
              - community.mongodb.mongodb_repository
              - community.mongodb.mongodb_install
              - community.mongodb.mongodb_mongod
            post_tasks:
              - name: install python-setuptools
                package:
                  name: python-setuptools
                  state: latest
                  update_cache: yes
              - name: install python-pip
                package:
                  name: python-pip
                  state: latest
              - name: Ensure pymongo is installed
                pip:
                  name: pymongo>2.4.2
                  state: present
              - name: Ensure replicaset "rs0" exists
                community.mongodb.mongodb_replicaset:
                  login_host: '{{ ansible_master_host }}'
                  login_port: '{{ ansible_config_port }}'
                  ssl: true
                  ssl_certfile: '{{ ansible_mongodb_certificate_key_file }}'
                  ssl_ca_certs: '{{ ansible_mongodb_certificate_ca_file }}'
                  replica_set: '{{ ansible_replicaset_name }}'
                  members:
                    - "{{ ansible_master_host }}:{{ ansible_config_port }}"
                    - "mongodb-0.poc-certificates.svc.cluster.local:{{ ansible_config_port }}"
                    - "mongodb-1.poc-certificates.svc.cluster.local:{{ ansible_config_port }}"
                  validate: no
                when: ansible_hostname == "mongodb-vm-2"               
              - name: Wait for the replicaset to stabilise
                community.mongodb.mongodb_status:
                  login_host: '{{ ansible_master_host }}'
                  login_port: '{{ ansible_config_port }}'
                  ssl: true
                  ssl_certfile: '{{ ansible_mongodb_certificate_key_file }}'
                  ssl_ca_certs: '{{ ansible_mongodb_certificate_ca_file }}'
                  replica_set: '{{ ansible_replicaset_name }}'
                  poll: 5
                  interval: 10
                  validate: minimal
                when: ansible_hostname == "mongodb-vm-2"
        path: /root/mongodb_replica_setup.yml
