- hosts: localhost
  pre_tasks:
    - name: Include Ansible vars
      include_vars:
        file: /mnt/ansible-vars/ansible_vars.yml
    - name: Create log and data directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - '{{ db_path }}'
        - '{{ log_path }}'
  roles:
    - community.mongodb.mongodb_repository
    - community.mongodb.mongodb_install
    - community.mongodb.mongodb_mongod
  post_tasks:
    - name: Ensure Python3 is available
      yum:
        name: 
          - python3 
          - python3-setuptools
          - python3-pip
        state: latest  
    - name: Ensure setuptools is installed
      pip:
        name: setuptools
        state: latest
      vars:
        ansible_python_interpreter: /usr/bin/python3
    - name: Ensure pymongo is installed
      pip:
        name: pymongo
        state: latest
      vars:
        ansible_python_interpreter: /usr/bin/python3
    - name: Ensure mongo shell is installed
      package:
        name: mongodb-org-shell
        state: present
    - name: Generate list of mongodb hosts and convert to csv string
      set_fact:
        mongodb_list: "{{ mongodb_list|default([]) + ['mongodb-' + (item|string) + '.' + namespace + '.svc.cluster.local:' + config_port|string] }}"
        mongodb_csv: "{{ (mongodb_list|default([]) + ['mongodb-' + (item|string) + '.' + namespace + '.svc.cluster.local:' + config_port|string])|join(',') }}"
      loop: "{{ range(0, replicaset_size)|list }}"
    - debug:
        var: mongodb_csv
    - name: Ensure replicaset exists
      community.mongodb.mongodb_replicaset:
        login_host: 'mongodb-0.{{ namespace }}.svc.cluster.local'
        login_port: '{{ config_port }}'
        ssl: true
        ssl_certfile: '{{ mongodb_certificate_key_file }}'
        ssl_ca_certs: '{{ mongodb_certificate_ca_file }}'
        replica_set: '{{ replicaset_name }}'    
        members: '{{  mongodb_csv  }}'  
        validate: no
      when: ansible_hostname is search("-0")               
    - name: Wait for the replicaset to stabilise
      community.mongodb.mongodb_status:
        login_host: 'mongodb-0.{{ namespace }}.svc.cluster.local'
        login_port: '{{ config_port }}'
        ssl: true
        ssl_certfile: '{{ mongodb_certificate_key_file }}'
        ssl_ca_certs: '{{ mongodb_certificate_ca_file  }}'
        replica_set: '{{ replicaset_name }}'    
        poll: 6
        interval: 10
        validate: minimal
      when: ansible_hostname is search("-0") 